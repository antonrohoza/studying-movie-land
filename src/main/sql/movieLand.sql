-- MySQL Script generated by MySQL Workbench
-- Thu Mar 31 14:24:17 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema movieLand
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema movieLand
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `movieLand` DEFAULT CHARACTER SET utf8 ;
USE `movieLand` ;

-- -----------------------------------------------------
-- Table `movieLand`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movieLand`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `login` VARCHAR(50) NOT NULL,
  `password` VARCHAR(100) NOT NULL,
  `name_en` VARCHAR(45) NOT NULL,
  `lastname_en` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  UNIQUE INDEX `login_UNIQUE` (`login` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movieLand`.`movie`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movieLand`.`movie` (
  `id` INT NOT NULL,
  `name_ru` VARCHAR(45) NOT NULL,
  `name_en` VARCHAR(45) NOT NULL,
  `year` YEAR(4) NOT NULL,
  `country` VARCHAR(45) NOT NULL,
  `description` TEXT(255) NOT NULL,
  `rating` DECIMAL(4,2) NOT NULL,
  `price` DECIMAL(9,2) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_ru_UNIQUE` (`name_ru` ASC) VISIBLE,
  UNIQUE INDEX `name_en_UNIQUE` (`name_en` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movieLand`.`genre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movieLand`.`genre` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movieLand`.`poster`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movieLand`.`poster` (
  `id` INT NOT NULL,
  `url` VARCHAR(45) NOT NULL,
  `movie_id` INT NOT NULL,
  PRIMARY KEY (`id`, `movie_id`),
  INDEX `fk_poster_movie1_idx` (`movie_id` ASC) VISIBLE,
  CONSTRAINT `fk_poster_movie1`
    FOREIGN KEY (`movie_id`)
    REFERENCES `movieLand`.`movie` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movieLand`.`review`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movieLand`.`review` (
  `id` INT NOT NULL,
  `review` TEXT(255) NOT NULL,
  `user_id` INT NOT NULL,
  `movie_id` INT NOT NULL,
  PRIMARY KEY (`id`, `user_id`, `movie_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_review_user1_idx` (`user_id` ASC) VISIBLE,
  INDEX `fk_review_movie1_idx` (`movie_id` ASC) VISIBLE,
  CONSTRAINT `fk_review_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `movieLand`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_review_movie1`
    FOREIGN KEY (`movie_id`)
    REFERENCES `movieLand`.`movie` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movieLand`.`movie_genre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movieLand`.`movie_genre` (
  `movie_id` INT NOT NULL,
  `genre_id` INT NOT NULL,
  PRIMARY KEY (`movie_id`, `genre_id`),
  INDEX `fk_movie_genre_genre1_idx` (`genre_id` ASC) VISIBLE,
  CONSTRAINT `fk_movie_genre_movie1`
    FOREIGN KEY (`movie_id`)
    REFERENCES `movieLand`.`movie` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_movie_genre_genre1`
    FOREIGN KEY (`genre_id`)
    REFERENCES `movieLand`.`genre` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
